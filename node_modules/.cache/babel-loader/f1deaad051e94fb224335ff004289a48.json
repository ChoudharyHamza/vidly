{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programing practice\\\\Small Projects\\\\vidly\\\\vidly\\\\src\\\\components\\\\list.jsx\";\n// so the target is to build a table\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Like from \"./like\";\nimport Paginaiton from \"./pagination\";\nimport Header1 from \"./TR\";\nimport { PaginationAlgo } from \"../utils/PaginationAlgo\";\nimport ListGroup from \"./listGroup\";\nexport default class Table1 extends Component {\n  constructor() {\n    super();\n\n    this.IconChangeHandeler = movie => {\n      let uni = this.state.movies;\n      const index = uni.indexOf(movie);\n      uni[index] = movie;\n      uni[index].like = uni[index].like === \"True\" ? \"False\" : \"True\";\n      this.setState({\n        movies: uni\n      });\n    };\n\n    this.PaginaitonHandeler = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.genreHandeler = (genre, movies) => {\n      const newArr = movies.filter(movie => genre === movie.genre.name);\n      console.log(newArr);\n      this.setState({\n        genreSorted: newArr\n      });\n      this.state.sortByGenre = \"True\";\n    };\n\n    this.state = {\n      movies: getMovies(),\n      pageLength: 4,\n      currentPage: 1,\n      genres: getGenres(),\n      sortByGenre: \"True\",\n      genreSorted: []\n    };\n  }\n\n  findItem(e) {\n    let movie = e.target.parentNode.parentNode;\n    let movi = this.state.movies.filter(m => m._id !== movie.id);\n    this.setState({\n      movies: movi\n    });\n  }\n\n  ArrayToRender() {\n    const arrayToRender = PaginationAlgo(this.state.movies, this.state.pageLength, this.state.currentPage);\n    this.setState({\n      arrayToRender\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          movies = _this$state.movies,\n          pageLength = _this$state.pageLength,\n          currentPage = _this$state.currentPage;\n    const lengthOfArray = movies.length;\n    let arrayToRender;\n\n    if (this.state.sortByGenre === \"True\") {\n      arrayToRender = PaginationAlgo(movies, pageLength, currentPage);\n    } else {\n      arrayToRender = this.state.genreSorted;\n    }\n\n    if (this.state.movies.length !== 0) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        genres: this.state.genres,\n        onGenreChange: this.genreHandeler,\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Header1, {\n        total: lengthOfArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Rate\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Icon\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Button\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, arrayToRender.map(movi => React.createElement(\"tr\", {\n        key: movi._id,\n        id: movi._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, movi.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, movi.genre.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, movi.numberInStock), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, movi.dailyRentalRate), React.createElement(Like, {\n        movie: arrayToRender,\n        onIconChange: this.IconChangeHandeler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.findItem.bind(this),\n        type: \"button\",\n        className: \"btn btn-danger btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Delete\")))))), React.createElement(Paginaiton, {\n        onPagination: this.PaginaitonHandeler,\n        pageLength: pageLength,\n        totalMovie: lengthOfArray,\n        currentPage: currentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Header1, {\n        total: lengthOfArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["E:\\Programing practice\\Small Projects\\vidly\\vidly\\src\\components\\list.jsx"],"names":["React","Component","getMovies","getGenres","Like","Paginaiton","Header1","PaginationAlgo","ListGroup","Table1","constructor","IconChangeHandeler","movie","uni","state","movies","index","indexOf","like","setState","PaginaitonHandeler","page","currentPage","genreHandeler","genre","newArr","filter","name","console","log","genreSorted","sortByGenre","pageLength","genres","findItem","e","target","parentNode","movi","m","_id","id","ArrayToRender","arrayToRender","render","lengthOfArray","length","map","title","numberInStock","dailyRentalRate","bind"],"mappings":"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","sourcesContent":["// so the target is to build a table\r\n\r\nimport React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Like from \"./like\";\r\nimport Paginaiton from \"./pagination\";\r\nimport Header1 from \"./TR\";\r\nimport { PaginationAlgo } from \"../utils/PaginationAlgo\";\r\nimport ListGroup from \"./listGroup\";\r\n\r\nexport default class Table1 extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: getMovies(),\r\n      pageLength: 4,\r\n      currentPage: 1,\r\n      genres: getGenres(),\r\n      sortByGenre: \"True\",\r\n      genreSorted: []\r\n    };\r\n  }\r\n\r\n  findItem(e) {\r\n    let movie = e.target.parentNode.parentNode;\r\n\r\n    let movi = this.state.movies.filter(m => m._id !== movie.id);\r\n    this.setState({ movies: movi });\r\n  }\r\n\r\n  IconChangeHandeler = movie => {\r\n    let uni = this.state.movies;\r\n    const index = uni.indexOf(movie);\r\n    uni[index] = movie;\r\n    uni[index].like = uni[index].like === \"True\" ? \"False\" : \"True\";\r\n    this.setState({ movies: uni });\r\n  };\r\n\r\n  PaginaitonHandeler = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  genreHandeler = (genre, movies) => {\r\n    const newArr = movies.filter(movie => genre === movie.genre.name);\r\n    console.log(newArr);\r\n    this.setState({ genreSorted: newArr });\r\n    this.state.sortByGenre = \"True\";\r\n  };\r\n\r\n  ArrayToRender() {\r\n    const arrayToRender = PaginationAlgo(\r\n      this.state.movies,\r\n      this.state.pageLength,\r\n      this.state.currentPage\r\n    );\r\n    this.setState({ arrayToRender });\r\n  }\r\n\r\n  render() {\r\n    const { movies, pageLength, currentPage } = this.state;\r\n    const lengthOfArray = movies.length;\r\n    let arrayToRender;\r\n\r\n    if (this.state.sortByGenre === \"True\") {\r\n      arrayToRender = PaginationAlgo(movies, pageLength, currentPage);\r\n    } else {\r\n      arrayToRender = this.state.genreSorted;\r\n    }\r\n\r\n    if (this.state.movies.length !== 0) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup\r\n              genres={this.state.genres}\r\n              onGenreChange={this.genreHandeler}\r\n              movies={movies}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Header1 total={lengthOfArray} />\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Genre</th>\r\n                  <th>Stock</th>\r\n                  <th>Rate</th>\r\n                  <th>Icon</th>\r\n                  <th>Button</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {arrayToRender.map(movi => (\r\n                  <tr key={movi._id} id={movi._id}>\r\n                    <td>{movi.title}</td>\r\n                    <td>{movi.genre.name}</td>\r\n                    <td>{movi.numberInStock}</td>\r\n                    <td>{movi.dailyRentalRate}</td>\r\n\r\n                    <Like\r\n                      movie={arrayToRender}\r\n                      onIconChange={this.IconChangeHandeler}\r\n                    />\r\n\r\n                    <td>\r\n                      <button\r\n                        onClick={this.findItem.bind(this)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger btn-sm\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <Paginaiton\r\n              onPagination={this.PaginaitonHandeler}\r\n              pageLength={pageLength}\r\n              totalMovie={lengthOfArray}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header1 total={lengthOfArray} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}